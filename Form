using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Xml;

namespace Dark_side_of_the_light__V2_
{
    public partial class Form1 : Form
    {
        Being you = new Being();
        SortedList<string, Event> story = new SortedList<string, Event>();
        SortedList<string, Encounter> encounters = new SortedList<string, Encounter>();
        Boolean IsActoion = false;
        string CurrentEventName="Main menu";
        public Form1()
        {
            InitializeComponent();
        }
        public void show(Event data)
        {
            if (data.Name == "A17" && you.health < 50) data = story["S1"];
            richTextBox1.Text = data.situation;
            button1.Text = data.FirstChoise;
            button2.Text = data.SecondChoise;
            button3.Text = data.ThirdChoise;
            button4.Text = data.FourthChoise;
            try
            {
                Bitmap image = new Bitmap(Application.StartupPath + @"\Images\" + data.Name + ".png");
                pictureBox1.Image = (Image)image;
            }
            catch { }

        }
        public void StartBattle(Encounter fight)
        {
            IsActoion = true;
            richTextBox1.Text = fight.meeting;
            button1.Text="I will eat your soul itself!";
            button2.Text = "I will eat your heart!";
            button3.Text = "I won`t give up!";
            button4.Text = "I can do nothing to me!";
            try
            {
                Bitmap image = new Bitmap(Application.StartupPath + @"\Images\" + encounters[CurrentEventName].Name + ".png");
                pictureBox1.Image = (Image)image;
            }
            catch { }
        }
        public void Battle(int DamageMultiplier, int DefenseMultiplier)
        {
            Random ChooseAction = new Random();
            int action = ChooseAction.Next(0, 2);
            if (action == 0)
            {
                you.health -= encounters[CurrentEventName].Power / DefenseMultiplier;
                richTextBox1.Text = "They hate you. They want to eat you. Will you give up? \r\nNo! I will kill them all, I will rip their hearts out and eat them!";
                encounters[CurrentEventName].health -= you.Power * DamageMultiplier;
            }
            if (action == 1)
            {
                richTextBox1.Text = "We will wait. You can`t run away, and now we will satisfy our pride! \r\nDon`t underestimate me! My will to kill you will destroy your selfconfidence!";
                encounters[CurrentEventName].health -= you.Power * DamageMultiplier;
            }
            if (action == 2)
            {
                richTextBox1.Text = "Little being, how dare you fight with us? We won`t admit you! \r\nI don`t need your admitting! You are liars, wishing my death. You can do nothing to me, but I won`t show you any mercy!";
                encounters[CurrentEventName].health -= you.Power * DamageMultiplier/2;
            }
            label2.Text = you.health.ToString();
            label4.Text = you.Power.ToString();
            if (you.health <= 0)
            {
                IsActoion = false;
                CurrentEventName = "Death in battle";
                show(story[CurrentEventName]);
            }
            if (CurrentEventName != "Death in battle" && encounters[CurrentEventName].health <= 0)
            {
                IsActoion = false;
                if (you.health <= 90) you.health += 10;
                else you.health = 100;
                you.Power += 10;
                label2.Text = you.health.ToString();
                label4.Text = you.Power.ToString();
                CurrentEventName = encounters[CurrentEventName].LinkedEventName;
                show(story[CurrentEventName]);
            }
        }
        private void button1_Click(object sender, EventArgs e)
        {
            if (IsActoion == false)
            {
                if (story[CurrentEventName].FirstEvent == "Death") Environment.Exit(0);
                CurrentEventName = story[CurrentEventName].FirstEvent;
                if (IfAction(CurrentEventName)) StartBattle(encounters[CurrentEventName]);
                else show(story[CurrentEventName]);
            }
            else
            {
                Battle(2, 1);
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (IsActoion == false)
            {
                if (story[CurrentEventName].SecondEvent == "Death") Environment.Exit(0);
                CurrentEventName = story[CurrentEventName].SecondEvent;
                if (IfAction(CurrentEventName)) StartBattle(encounters[CurrentEventName]);
                else show(story[CurrentEventName]);
            }
            else
            {
                Battle(1, 1);
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            if (IsActoion == false)
            {
                if (story[CurrentEventName].ThirdEvent == "Death") Environment.Exit(0);
                CurrentEventName = story[CurrentEventName].ThirdEvent;
                if (IfAction(CurrentEventName)) StartBattle(encounters[CurrentEventName]);
                else show(story[CurrentEventName]);
            }
            else
            {
                Battle(0, 2);
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            if (IsActoion == false)
            {
                if (story[CurrentEventName].FourthEvent == "Death") Environment.Exit(0);
                CurrentEventName = story[CurrentEventName].FourthEvent;
                if (IfAction(CurrentEventName)) StartBattle(encounters[CurrentEventName]);
                else show(story[CurrentEventName]);
            }
            else
            {
                Battle(0, 4);
            }
        }

        private void richTextBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {
            string path = Application.StartupPath + @"\data.xml";
            XmlDocument file = new XmlDocument();
            try
            {
                using (XmlReader reader = XmlReader.Create(path))
                {
                    Event NewEvent = new Event();
                    Encounter NewEncounter = new Encounter();
                    while (reader.Read())
                    {

                        switch (reader.NodeType)
                        {
                            case XmlNodeType.Element:
                                if (reader.Name == "Event")
                                {
                                    NewEvent.Name += reader[0];
                                }
                                if (reader.Name == "Text")
                                {
                                    NewEvent.situation = reader.ReadString();
                                }
                                if (reader.Name == "First_button")
                                {
                                    NewEvent.FirstEvent += reader[0];
                                    NewEvent.FirstChoise = reader.ReadString();
                                }
                                if (reader.Name == "Second_button")
                                {
                                    NewEvent.SecondEvent += reader[0];
                                    NewEvent.SecondChoise = reader.ReadString();
                                }
                                if (reader.Name == "Third_button")
                                {
                                    NewEvent.ThirdEvent += reader[0];
                                    NewEvent.ThirdChoise = reader.ReadString();
                                }
                                if (reader.Name == "Fourth_button")
                                {
                                    NewEvent.FourthEvent += reader[0];
                                    NewEvent.FourthChoise = reader.ReadString();
                                    story.Add(NewEvent.Name, NewEvent);
                                    NewEvent = new Event();
                                }
                                if (reader.Name == "Encounter")
                                {
                                    NewEncounter.Name += reader[0];
                                    NewEncounter.LinkedEventName += reader[1];
                                }
                                if (reader.Name == "Meeting") NewEncounter.meeting = reader.ReadString();
                                if (reader.Name == "Health") NewEncounter.health = Convert.ToInt32(reader.ReadString());
                                if (reader.Name == "Power")
                                {
                                    NewEncounter.Power = Convert.ToInt32(reader.ReadString());
                                    encounters.Add(NewEncounter.Name, NewEncounter);
                                    NewEncounter = new Encounter();
                                }
                                break;
                        }
                    }
                }
            }
            catch 
            {
                Event Exception = new Event();
                Exception.situation="Error: data file not found. Try to unzip file.";
                Exception.FirstEvent="Death";
                Exception.SecondEvent = "Death";
                Exception.ThirdEvent = "Death";
                Exception.FourthEvent = "Death";
                story.Add("Exception",Exception);
                CurrentEventName="Exception";
            }
            show(story[CurrentEventName]);
        }
        public bool IfAction(string CurrentEventName)
        {
            if ((CurrentEventName[1] < '0' || CurrentEventName[1] > '9') && CurrentEventName != "Main menu" && CurrentEventName != "Reason" && CurrentEventName != "Credits") return true;
            else return false;
        }
    }
}
